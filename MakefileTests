CC = g++
FLAGS = -Wall -Wextra -Werror -std=c++11
HELPER = tests_main.o


all: test_hashtable test_graph test_uber_node test_uber_map\
	test_uber_driver test_uber_database

$(HELPER): tests_main.cpp catch.hpp
	$(CC) -o $@ -c tests_main.cpp $(FLAGS)

test_hashtable: $(HELPER) test_hashtable.cpp hashtable.h hashtable_utils.h
	$(CC) -o $@ $(HELPER) test_hashtable.cpp $(FLAGS)

test_graph: $(HELPER) test_graph.cpp graph.h
	$(CC) -o $@ $(HELPER) test_graph.cpp $(FLAGS)

test_uber_node: $(HELPER) test_uber_node.cpp uber_node.o
	$(CC) -o $@ $^ $(FLAGS)

uber_node.o: uber_node.cpp uber_node.h
	$(CC) -c $< $(FLAGS)

test_uber_map: $(HELPER) test_uber_map.cpp uber_map.o uber_node.o
	$(CC) -o $@ $^ $(FLAGS)

uber_map.o: uber_map.cpp uber_map.h uber_node.h graph.h hashtable.h
	$(CC) -c $< $(FLAGS)

test_uber_driver: $(HELPER) test_uber_driver.cpp uber_driver.o
	$(CC) -o $@ $^ $(FLAGS)

uber_driver.o: uber_driver.cpp uber_driver.h
	$(CC) -c $< $(FLAGS)

test_uber_database: $(HELPER) test_uber_database.cpp uber_database.o\
	uber_driver.o
	$(CC) -o $@ $^ $(FLAGS)

uber_database.o: uber_database.cpp uber_database.h uber_driver.h hashtable.h
	$(CC) -c $< $(FLAGS)


.PHONY: clean clean_all
clean:
	rm -f test_hashtable test_graph test_uber_node test_uber_map\
		test_uber_driver test_uber_database uber*.o

clean_all: clean
	rm -f $(HELPER)
